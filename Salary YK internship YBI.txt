IMPORT DATA

[10]
import pandas as pd


[ ]
import numpy as np

[ ]
import matplotlib.pyplot as plt

[ ]
import seaborn as sns
IMPORT LIABARY

[11]
salaries = pd.read_csv('https://github.com/YBI-Foundation/Dataset/raw/main/Salary%20Data.csv')


[12]
0s
print(salaries)
    Experience Years  Salary
0                1.1   39343
1                1.2   42774
2                1.3   46205
3                1.5   37731
4                2.0   43525
5                2.2   39891
6                2.5   48266
7                2.9   56642
8                3.0   60150
9                3.2   54445
10               3.2   64445
11               3.5   60000
12               3.7   57189
13               3.8   60200
14               3.9   63218
15               4.0   55794
16               4.0   56957
17               4.1   57081
18               4.3   59095
19               4.5   61111
20               4.7   64500
21               4.9   67938
22               5.1   66029
23               5.3   83088
24               5.5   82200
25               5.9   81363
26               6.0   93940
27               6.2   91000
28               6.5   90000
29               6.8   91738
30               7.1   98273
31               7.9  101302
32               8.2  113812
33               8.5  111620
34               8.7  109431
35               9.0  105582
36               9.5  116969
37               9.6  112635
38              10.3  122391
39              10.5  121872

[24]
0s
salaries.head()

Next steps:

[ ]
salaries.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 40 entries, 0 to 39
Data columns (total 2 columns):
 #   Column            Non-Null Count  Dtype  
---  ------            --------------  -----  
 0   Experience Years  40 non-null     float64
 1   Salary            40 non-null     int64  
dtypes: float64(1), int64(1)
memory usage: 768.0 bytes

[ ]
salaries.describe()

Define Target Variable (y) and Feature Variables (X)

[ ]
salaries.columns
Index(['Experience Years', 'Salary'], dtype='object')

[14]
0s
salaries.shape
(40, 2)

[15]
y=salaries['Salary']
x=salaries[['Experience Years']]

[16]
0s
x.shape
(40, 1)

[ ]
y.shape
(40,)
Train Test Split

[21]
0s
from sklearn.model_selection import train_test_split

[60]
0s
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=2529)
x_train

Next steps:

[62]
0s
x_train.shape,x_test.shape,y_train.shape,y_test.shape
((30, 1), (10, 1), (30,), (10,))
Modeling

[61]
0s
from sklearn.linear_model import LinearRegression
model=LinearRegression()

[63]
0s
model.fit(x_train,y_train)


[64]
0s
model.intercept_
27010.963630394683

[65]
0s
model.coef_
array([9343.3671387])

[66]
0s
y_pred=model.predict(x_test)

[67]
0s
x_test

Next steps:
Prediction

[68]
0s
from sklearn.metrics import mean_absolute_percentage_error

[69]
0s
mean_absolute_percentage_error(y_test,y_pred)
0.06230870755908321
The provided Python code performs a linear regression analysis on salary data. Here’s a brief explanation:

Import Libraries: Libraries like pandas, numpy, matplotlib, and seaborn are imported for data manipulation, numerical operations, and visualization.

Load Data: The dataset is loaded from a CSV file containing experience years and salaries.

Data Exploration: Basic data exploration is performed using print, head(), info(), and describe() to understand the dataset's structure and summary statistics.

Define Variables: Experience Years is set as the feature variable (X), and Salary is the target variable (y).

Train-Test Split: The data is split into training and test sets.

Model Training: A linear regression model is created and trained on the training data.

Model Evaluation: The model’s intercept and coefficient are examined, predictions are made on the test set, and the Mean Absolute Percentage Error (MAPE) is calculated to evaluate model performance.

The MAPE indicates a 6.23% average error in the predictions.
